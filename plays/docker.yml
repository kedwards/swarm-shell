---
- name: Docker Install
  hosts: all
  become: yes
  tasks:
    - name: Update the apt package index
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Install packages for apt add repository over HTTPS
      apt:
        name: "{{ packagesdep }}"
        force_apt_get: yes
        state: latest
        update_cache: yes
      vars:
        packagesdep:
          - git
          - apt-transport-https
          - ca-certificates
          - wget
          - software-properties-common
          - gnupg2
          - curl
          - python-dev
          - python-pip

    - name: Add Apt signing key from official docker repo
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: add docker official repository for Debian Stretch
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present

    - name: Index new repo into the cache
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Install docker
      apt:
        name: "docker-ce"
        state: latest

    # - name: Ensure docker-compose is installed and available
    #   get_url:
    #     url: https://github.com/docker/compose/releases/download/1.23.2/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    #     dest: /usr/local/bin/docker-compose
    #     mode: 'u+x,g+x'

    - name: Ensure docker-machine is installed and available
      get_url:
        url: https://github.com/docker/machine/releases/download/v0.16.0/docker-machine-{{ ansible_system }}-{{ ansible_userspace_architecture }}
        dest: /usr/local/bin/docker-machine
        mode: 'u+x,g+x'

    - name: Upgrade latest pip, setuptools, docker-py and docker-compose with pip
      pip:
        name: "{{ item.name }}"
        state: latest
      with_items:
        #- { name: pip, version: "latest", install: true }
        #- { name: setuptools, version: "latest", install: true }
        #- { name: docker-py, version: "latest", install: true }
        - { name: docker-compose, version: "latest", install: true }
      when: (item.version=="latest" and item.install)
      ignore_errors: yes

    - name: "Add docker group"
      group:
        name: docker
        state: present

    - name: "Add vagrant to docker group"
      user:
        name: vagrant
        groups: docker
        append: yes

    - name: "Restart Docker service"
      service:
        name: docker
        state: restarted
